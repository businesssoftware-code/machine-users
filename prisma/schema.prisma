// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  raspberryPi     String?
  name            String    @unique
  password        String?
  numberOfLiquids Int?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  Recipe          Recipe[]
}

model Recipe {
  id           Int             @id @default(autoincrement())
  name         String
  blending     BlendingPattern
  userId       Int
  url          String          @default("")
  user         User            @relation(fields: [userId], references: [id])
  createdAt    DateTime        @default(now())
  updatedAt    DateTime?       @updatedAt
  RecipeLiquid RecipeLiquid[]
}

model RecipeLiquid {
  id       Int    @id @default(autoincrement())
  liquidId Int // e.g. "L1", "L2", etc.
  label    String // "L1", "L2", etc.
  quantity Float
  recipeId Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  liquid   Liquid @relation(fields: [liquidId], references: [id])
}

model Liquid {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  RecipeLiquid RecipeLiquid[]
}

enum BlendingPattern {
  low
  medium
  high
}
